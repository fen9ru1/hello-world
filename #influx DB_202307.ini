#influx DB 0718

DB info 
    influx 
        learn
            https://university.influxdata.com/
            id: fen9ru1.dev@gmail.com
            ps: 1**1**qBIG
    mqtt Brocker

    goal for persnal
        any certificate?

    version cloud  test 
        https://cloud2.influxdata.com/splash
            ICT promotion department DEV TEST

    version OSS info (List)
        https://docs.influxdata.com/

    start (tutorir,ここから勉強)
        https://docs.influxdata.com/influxdb/v2.7/get-started/

    一覧
        https://university.influxdata.com/catalog/


prepaire
    cd C:\Users\k13603\Downloads>

    Expand-Archive .\influxdb2-2.7.0-windows-amd64.zip -DestinationPath 'C:\Program Files\InfluxData\'

    mv 'C:\Program Files\InfluxData\influxdb2-2.7.0-windows-amd64' 'C:\Program Files\InfluxData\influxdb'

    cd -Path 'C:\Program Files\InfluxData\influxdb\' ' 

Set up and initialize InfluxDB.
    username 
        ifx_usr01
    pw
        1*******
    Organization Name
        usr_grp01
    bucket 
    bucket_01

    after login (out put token)
        929ZSppWUgnbF5OQ1yiGtB4M1xdBT1B7v7tZn0IFPgnFrIl5J47y_2zepfnKcUkXPG_UGEgldiUOXzo88D7d1Q==

    Operator tokens
        Z-y-6P7gXZcctwU7YCr98PF80phreco277iBfCst8iTyEnQX14J8tPA7c6ljxnDJzfP8LTkNfQpwitBnePW0Gw==
    

    All Access API Token test // created myself
        bLXDkwg5Ri44sOlgOc5SHfSHKmQrLaWvINtDuRVIRpGCQUN2VPzEq11GvjEyEmYYUEqF5FZ6l2q6AxaVXYOz1A==

set up a configuration profile
    CMD
        ./influx.exe config create --config-name default --host-url http://localhost:8086 --org usr_grp01 --token Z-y-6P7gXZcctwU7YCr98PF80phreco277iBfCst8iTyEnQX14J8tPA7c6ljxnDJzfP8LTkNfQpwitBnePW0Gw== --active
    CLI out put:
        Active  Name    URL                     Org
        *       default http://localhost:8086   usr_grp01
Write line protocol to InfluxDB
    bucket_01

set up a configuration profile (again with All Access API Token )
    ./influx.exe config create --config-name config-kaku --host-url http://localhost:8086 --org usr_grp01 --token bLXDkwg5Ri44sOlgOc5SHfSHKmQrLaWvINtDuRVIRpGCQUN2VPzEq11GvjEyEmYYUEqF5FZ6l2q6AxaVXYOz1A== --active
    CLI out put:
        Active  Name            URL                     Org
        *       config-kaku     http://localhost:8086   usr_grp01

#trends
# reture Mr.kagata
#done..
    https://docs.influxdata.com/influxdb/v2.7/get-started/visualize/


#0718
export INFLUX_TOKEN=o86OHO2vY2IyiUqo6sDYEQu7jhsFgXzYMd6Pk39dxPjZU7vkvNKtZH8imJoOdRy9aGidoSDe520SUCzSPQRrfQ==

telegraf --config https://us-east-1-1.aws.cloud2.influxdata.com/api/v2/telegrafs/0b85a21931ab5000

./influx.exe bucket --active-config config-kaku create --name cli-bucket01

./influx.exe bucket create --name bucket000


influx config create \
  -n config-kaku \
  -u http://localhost:8086 \
  -p ifx_usr02:123123qq \
  -o usr_grp01

./influx.exe config create -n config-kaku -u http://localhost:8086 -p ifx_usr02:123123qq -o usr_grp01

./influx.exe config config-kaku query '
from(bucket: "bucket")
    |> range(start: 2022-01-01T08:00:00Z, stop: 2022-01-01T20:00:01Z)
    |> filter(fn: (r) => r._measurement == "home")
    |> filter(fn: (r) => r._field== "co" or r._field == "hum" or r._field == "temp")
'


#2024/03/19
    #influx DB  TSDB

    Urs Hugentobler のチームメンバーである Lucien から、
    InfluxDB のパフォーマンス調査についてプレゼンテーションを受ける予定です。 
    彼は、「InfluxDB」と「Postgres TimescaleDB」というテーマに関する修士論文の研究を行いました
    比較
        timescale:
            https://www.timescale.com/blog/timescaledb-vs-influxdb-for-time-series-data-timescale-influx-sql-nosql-36489299877/
        influxdata:
            https://www.influxdata.com/comparison/influxdb-vs-timescaledb/



    why we still using rds 
        togethr with TWX 
        no one know
        aws management 
        meta data & sencer data together 
        lagath
    which version 

    what envioment ?
        scalable ? scall up 
    Influx DB info,jp
        chrome-extension://efaidnbmnnnibpcajpcglclefindmkaj/https://www.sraoss.co.jp/wp-content/uploads/files/event_seminar/material/2021/RDB_-engineer_InfluxDB.pdf

    https://www.influxdata.com/blog/the-plan-for-influxdb-3-0-open-source/

    Lucien Stuker
        https://www.linkedin.com/in/lucienstuker/?originalSubdomain=ch

    OSS for InfluxDB 3.0,
        we’re announcing our plan to deliver an open source InfluxDB 3.0, which we’re calling calling InfluxDB Edge.
    
        https://www.influxdata.com/blog/the-plan-for-influxdb-3-0-open-source/

    may work togethr, 
        https://docs.influxdata.com/kapacitor/v1/working/kapa-and-chrono/


To do
    EC2, Remote Desktop
    notice 
        消す前提、No backup 
        OS on/off, ec2 on/off


#2024/03/22 befor
    #influx 検証用EC2の構築

    構成
        mosqito(mqtt) -> flund-> influx -> grafana

        EC2 , 

    Env
        gen-dev
        iotpf-poc-subnet-apne1-dept01-private-a

    keypair
        iotpf-dev-keypair-apne1-test-db01
        RDP PW
            3X5Olb7CCZipSh!rq69NJq&TU2q0xP;j
    sg
        iotpf-dev-sg-apne1-gen-dev-test-db01

    EC2構築時、自動生成script
        cmd 
            {
            "MaxCount": 1,
            "MinCount": 1,
            "ImageId": "ami-0962657fe505b0123",
            "InstanceType": "m5a.xlarge",
            "KeyName": "iotpf-dev-keypair-apne1-test-db01",
            "EbsOptimized": true,
            "BlockDeviceMappings": [
                {
                "DeviceName": "/dev/sda1",
                "Ebs": {
                    "Encrypted": false,
                    "DeleteOnTermination": true,
                    "SnapshotId": "snap-075a15e835dc5b782",
                    "VolumeSize": 100,
                    "VolumeType": "gp2"
                }
                }
            ],
            "NetworkInterfaces": [
                {
                "SubnetId": "subnet-05dab3d63ba694f1d",
                "AssociatePublicIpAddress": false,
                "DeviceIndex": 0,
                "Groups": [
                    "<groupId of the new security group created below>"
                ]
                }
            ],
            "TagSpecifications": [
                {
                "ResourceType": "instance",
                "Tags": [
                    {
                    "Key": "Name",
                    "Value": "20240321-TEST-DB"
                    }
                ]
                }
            ],
            "IamInstanceProfile": {
                "Arn": "arn:aws:iam::350863595295:instance-profile/AmazonSSMManagedInstanceCore"
            },
            "MetadataOptions": {
                "HttpTokens": "required",
                "HttpEndpoint": "enabled",
                "HttpPutResponseHopLimit": 2
            },
            "PrivateDnsNameOptions": {
                "HostnameType": "ip-name",
                "EnableResourceNameDnsARecord": false,
                "EnableResourceNameDnsAAAARecord": false
            }
            }

    前提条件
        AWS CLI 
        profile設定済み
            [profile datalake-prod]
            region = ap-northeast-1
            output = json
            mfa_serial= arn:aws:iam::950373141177:mfa/guo_f@hitachizosen.co.jp
            role_arn = arn:aws:iam::701779787373:role/iotpf-prod-role-950373141177-switch_power_user
            source_profile = iam-user
            [profile shr]
            role_arn=arn:aws:iam::503400750244:role/iotpf-prod-role-950373141177-switch_power_user
            mfa_serial=arn:aws:iam::950373141177:mfa/guo_f@hitachizosen.co.jp
            region = ap-northeast-1
            source_profile=default
            [profile gen-dev]
            role_arn = arn:aws:iam::350863595295:role/iotpf-prod-role-950373141177-switch_power_user
            mfa_serial=arn:aws:iam::950373141177:mfa/guo_f@hitachizosen.co.jp
            region = ap-northeast-1
            source_profile=default
            [default]
            region = ap-northeast-1
            output = json
        SSM agent　install, 設定
            PCから install //保留
                ref  山崎さん設定ファイル
                    dir: C:\Users\k13603\Documents\inova_workspace_2024\ec2_connection_config

        EC2 GUI
            立つ時　SSMのロール

    Local PC bash file （RDP利用するため） /RDP前事前設定、初回だけ
        中身
            aws ssm start-session ^
            --target i-0ac88336e86db403e ^
            --profile gen-dev ^
            --document-name AWS-StartPortForwardingSessionToRemoteHost ^
            --parameters host="10.4.0.57",portNumber="3389",localPortNumber="1212"
            pause
        Note：以下は実情に応じて、変更
            localPortNumber="1212"
            profile gen-dev
        
    Bash file 起動
        MFA認証
        #Message: 。。。
            Waiting for connections...

    Local PC RDP GUI 開く
        コンピューター：
            localhost:1212
        Administrator
            3X5Olb7CCZipSh!rq69NJq&TU2q0xP;j
    ref
        https://business.ntt-east.co.jp/content/cloudsolution/column-try-27.html


    外部からWindowsの接続手段、//内部で見たいものを　

        SSM //シンプル、簡易使う場合
            Local PC ,
            aws ssm start-session ^
                --target i-0ac88336e86db403e ^
                --profile gen-dev ^
                --document-name AWS-StartPortForwardingSessionToRemoteHost ^
                --parameters host="abc IP",portNumber="80",localPortNumber="2222"
            Remote PC
                Windows ,(Web Host: http:abc IP:80)　//内部で見たいもの、 ここからweb見えることが前提

            Local PC         
                Broser:
                    http://localhost:3434

    EC2停止忘れない
        #自動停止開始

    権限
    山田さん相談　費用の確認
    横田相談
    定形？運用


06/25


    AWS services review
        CLoudfront
        Cloud Fromation
            template
                .yml
                    Parameters:
                        Env:
                            Type: String
                        ServiceName:
                            Type: String
                        AccountId:
                            Type: String
                        WebCpu:
                            Type: Number
                        WebMemory:
                            Type: Number
                        NginxLatestTag:
                            Type: String
                        PhpLatestTag:
                            Type: String

                    Resources:
                        # Task Definition
                        TaskDefinition:
                            Type: AWS::ECS::TaskDefinition
                            Properties:
                            Family: !Sub ${ServiceName}-${Env}-web
                            Cpu: !Ref WebCpu
                            Memory: !Ref WebMemory
                            NetworkMode: awsvpc
                    Outputs:
                        TaskDefinition:
                            Value: !Ref TaskDefinition
            stack
                main.yml
                    AWSTemplateFormatVersion: '2010-09-09'
                    Parameters:
                    Env:
                        Type: String
                    VpcId:
                        Type: String
                    IgwId:
                        Type: String
                    ServiceName:
                        Type: String

                    Resources:
                    #---ネットワーク割愛---

                    Ecr:
                        Type: AWS::CloudFormation::Stack
                        Properties:
                        Parameters:
                            Env: !Ref Env
                    Alb:
                        Type: AWS::CloudFormation::Stack
                        DependsOn: Sg
                        Properties:
                        Parameters:
                            Env: !Ref Env
                            AccountId: !Ref "AWS::AccountId"
                    EcsTask:
                        Type: AWS::CloudFormation::Stack
                        DependsOn: Alb
                        Properties:
                        Parameters:
                            Env: !Ref Env
                            AccountId: !Ref "AWS::AccountId"

            変更セット
                aws cloudformation deploy \
                --stack-name "$STACK_NAME" \
                --template-file "./cf/$ENV/main.yaml" \
                --parameter-overrides $(cat ./cf/$ENV/.params) \
                --no-execute-changeset \
                --profile "$PROFILE"
                //--no-execute-changesetを付与すると、
            デプロイ
                aws cloudformation deploy \
                --stack-name "$STACK_NAME" \
                --template-file "./cf/$ENV/main.yaml" \
                --parameter-overrides $(cat ./cf/$ENV/.params) \
                --profile "$PROFILE"
            削除
            info ref
                初学者のためのCloudFormation超入門
                    https://www.isoroot.jp/blog/6587/
        Amazon Location Service
            AWS新サービスAmazon Location Serviceとは？
                https://qiita.com/yoshii0110/items/26022631e2672169f7bd
        AWS Step Functions
            state machine、AWS Step Functions をゼロからざっくり理解する
                https://dev.classmethod.jp/articles/aws-step-functions-for-beginner/

    my thoughts
        document maganement
            obcidian& CDN
        container base
            ECS containers, fargate?        
        E-learning
            DX
            insight
            FX
            PM
            be ready Eng, talk with others

    #iteration 1
        based on(aws 技術blog)
            title 時系列データ可視化のための InfluxDB、Grafana、AWS IoTの連携
                https://aws.amazon.com/jp/blogs/news/influxdb-and-grafana-with-aws-iot-to-visualize-time-series-data/
            note, whats new for me,機能
                集約されたデータを InfluxDB に挿入することも可能
                    追加オプションとして、Lambda Step Functions をトリガーして特定の時間間隔（5分間隔の平均など）でデータを集約し、。 I
                Amazon S3 バケットにエクスポート
                    InfluxDB データは CSV ファイルとして Amazon S3 バケットにエクスポートすることもでき、
                    Amazon SageMaker で異常検出またはその他の ML モデリングを実行するためのデータソースになります。
        simulater
            https://youtu.be/7-u3n8-2sng
            device type: doggie cam
                widget :
                    No. of widgets:10
        docs 実装ガイド(read me 1st)
            https://docs.aws.amazon.com/solutions/latest/iot-device-simulator/architecture-overview.html
        
        AWS Builder ID //B  (need to pay, 400 dollar/ year)
            fen9ru1.dev
            123*****_*
            login adr:
                https://explore.skillbuilder.aws/pages/16/learner-dashboard
        
        hands on 
            deploy iot simulator on Gen-DEV
                CFN
                    stack name
                        iotpf-dev-iot-dev-simulator
                    S3 URL: https://s3.ap-northeast-1.amazonaws.com/cf-templates-eu6ono25xgj6-ap-northeast-1/2024-06-20T091134.610Zc8f-iot-device-simulator.template
            ask Mr yamasaki (not yet)
                java script part 
                iot core part]
            steps doc 
                url :
                    https://docs.aws.amazon.com/ja_jp/solutions/latest/iot-device-simulator/step-1-launch-the-stack.html
            web login info(from mail)
                You are invited to join IoT Device Simulator.
                https://d1nzp44mfstr2.cloudfront.net

                Please sign in to IoT Device Simulator using the temporary credentials below:
                Username: guo_f@hitachizosen.co.jp
                Password: t;e3H1r0:FtT //123123qq_IoT
            
            Device Type Definition
                Device type name
                    Guo_Device
             
        new insight
            Guidance for Connected Products with SimpleIOT on AWS
                https://aws.amazon.com/jp/solutions/guidance/connected-products-with-simpleiot-on-aws/

                // it has Architecture Diagram, very intresting

                Amazon Timestream for InfluxDB
                    https://dev.classmethod.jp/articles/personal-opinion-on-amazon-timestream-for-influxdb-202403/
                
                Amazon Timestream を使ったオープンソースの InfluxDB データベースの実行と管理    （公式）
                    https://aws.amazon.com/jp/blogs/news/run-and-manage-open-source-influxdb-databases-with-amazon-timestream/

#とにかくhandon, endwith failed, but get hint
    iotcore-> mosqito
        ref: (Mosquitto で AWS IoT Core にメッセージを Publish/Subscribe する)
            https://zenn.dev/kou_pg_0131/articles/aws-iot-core-mosquitto

        証明書を作成
            Downloaded to local dir:
                C:\Users\k13603\Documents\Task_Influx-DB_related\iteration 1\iot core認証など
        ポリシーを作成
            name:
                iotpf-dev-iotpol-apne1-gen-dev-pamela-test01
            Polidc document
                allow 四つを追加
                    connect, publish, subscribe, receive
                    json
                        {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                "Condition": {
                                    "Bool": {
                                    "iot:Connection.Thing.IsAttached": [
                                        "true"
                                    ]
                                    }
                                },
                                "Effect": "Allow",
                                "Action": "iot:Connect",
                                "Resource": "*"
                                },
                                {
                                "Effect": "Allow",
                                "Action": "iot:Publish",
                                "Resource": "*"
                                },
                                {
                                "Effect": "Allow",
                                "Action": "iot:Subscribe",
                                "Resource": "*"
                                },
                                {
                                "Effect": "Allow",
                                "Action": "iot:Receive",
                                "Resource": "*"
                                }
                            ]
                        }
            証明書にポリシーをアタッチ

            エンドポイントを確認
                Path:
                    AWS IoT > Settings
                Device data endpoint !!! [host]
                    a2jg7heyk08f5y-ats.iot.ap-northeast-1.amazonaws.com

        Thing name
            test02-thing

        //not works, 見直し、別記事調査



#AWS IoT Core と MQTTクライアント (mosquitto/paho)の疎通
    ref:AWS IoT Core と MQTTクライアント (mosquitto/paho)の疎通
        https://qiita.com/thetsuthetsu/items/63bfaa53703d197a1ae4
    ref:Mosquitto で AWS IoT Core にメッセージを Publish/Subscribe する
        https://zenn.dev/kou_pg_0131/articles/aws-iot-core-mosquitto
    ref: AWS IoTのクイック接続を利用してPythonとMosquittoからIoT CoreとMQTT通信してみた
        https://dev.classmethod.jp/articles/mosquitto-with-aws-iot-quick-connect/

# Mosquitoo CMD  works on Local PC& EC2
    -----------------
    //Windows上mosquitto動作確認,下記それぞれのCMDで実施           
            mosquitto_sub.exe -h localhost -t "test/Topic1"
            mosquitto_pub.exe -h localhost -t "test/Topic1" -m "test desu."

    //mosquitto＆IoTcore Test on local PC 
        Pub (Works) //Local PC=>iotcore, but iotcore shows "Message cannot be displayed in specified format."
            mosquitto_pub -d ^
            --host "a2jg7heyk08f5y-ats.iot.ap-northeast-1.amazonaws.com" ^
            --cafile "C:\Users\k13603\Documents\Task_Influx-DB_related\iteration_1\connect_one_device\connect_device_package\root-CA.crt" ^
            --cert   "C:\Users\k13603\Documents\Task_Influx-DB_related\iteration_1\connect_one_device\connect_device_package\PamelaTestThing.cert.pem" ^
            --key    "C:\Users\k13603\Documents\Task_Influx-DB_related\iteration_1\connect_one_device\connect_device_package\PamelaTestThing.private.key" ^
            --id basicPubSub ^
            --topic "sdk/test/python" ^
            --message '{"message": "Hello from mosquitto_pub on Local PC!!!!"}'
        Sub (Works) //iot core からpublish, Local PC terminal から確認済み
            mosquitto_sub ^
            --cafile "C:\Users\k13603\Documents\Task_Influx-DB_related\iteration_1\connect_one_device\connect_device_package\root-CA.crt" ^
            --cert   "C:\Users\k13603\Documents\Task_Influx-DB_related\iteration_1\connect_one_device\connect_device_package\PamelaTestThing.cert.pem" ^
            --key    "C:\Users\k13603\Documents\Task_Influx-DB_related\iteration_1\connect_one_device\connect_device_package\PamelaTestThing.private.key" ^
            --host "a2jg7heyk08f5y-ats.iot.ap-northeast-1.amazonaws.com" ^
            --id basicPubSub ^
            --port 8883 ^
            --topic "sdk/test/python"

    //mosquitto＆IoTcore test on ec2 win server
        Pub (Works)
            mosquitto_pub -d ^
            --host "a2jg7heyk08f5y-ats.iot.ap-northeast-1.amazonaws.com" ^
            --cafile "C:\influx_root\connect_device_package\root-CA.crt" ^
            --cert   "C:\influx_root\connect_device_package\PamelaTestThing.cert.pem" ^
            --key    "C:\influx_root\connect_device_package\PamelaTestThing.private.key" ^
            --id basicPubSub ^
            --topic "sdk/test/python" ^
            --message '{"message":"Hello from mosquitto_pub on EC2 PC!!!!"}'

        Sub (not test yet)
            mosquitto_sub -d ^
            --cafile "C:\influx_root\connect_device_package\root-CA.crt" ^
            --cert   "C:\influx_root\connect_device_package\PamelaTestThing.cert.pem" ^
            --key    "C:\influx_root\connect_device_package\PamelaTestThing.private.key" ^
            --host "a2jg7heyk08f5y-ats.iot.ap-northeast-1.amazonaws.com" ^
            --id basicPubSub ^
            --port 8883 ^
            --topic "sdk/test/python"


            問題！
                mqtt受診error
                    ref: Windows上で手軽にMQTTブローカーを立ち上げる(Mosquitto)
                        https://happynap.net/2022-07-08-173750/
                    ref: Mosquitto clients 2.0.2 fails to communicate with Mosquitto broker 1.6.12 
                        https://github.com/eclipse/mosquitto/issues/1957


#iteration 1 ,keep going
    #status
        as is: iot core & Mosquitoo 疎通テスト
        to be: iot core -> Telegraph -> influx
    # ref oneNote(with Mr.izaki) for EC2 ENV
        https://hitzjp-my.sharepoint.com/personal/izaki_hitachizosen_co_jp/_layouts/15/Doc.aspx?sourcedoc={01427f11-cd66-4c90-b522-b05699df241e}&action=edit&wd=target%28Influx%20DEV.one%7C3eed2816-1c30-430c-a377-55d379c83151%2FAWS%20InluxDB%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97%7Cde97b413-dd3e-473d-ab0f-1702d179a047%2F%29&wdorigin=NavigationUrl

    #EC2起動、RDP PW
        3X5Olb7CCZipSh!rq69NJq&TU2q0xP;j

    #EC2起動後rutine
        #Influx起動
        Open CMD from dir:
            C:\influx_root\influxdb 
                http://localhost:8086
        #telegrap起動
            set TELEGRAF_CONFIG_PATH=C:\influx_root\telegraf\telegraf.conf
            C:\influx_root\telegraf>telegraf.exe

 
    #送信CMD for data souce-> iotcore (sample)
        mosquitto_pub -d ^
        --host "a2jg7heyk08f5y-ats.iot.ap-northeast-1.amazonaws.com" ^
        --cafile "C:\influx_root\connect_device_package\root-CA.crt" ^
        --cert   "C:\influx_root\connect_device_package\PamelaTestThing.cert.pem" ^
        --key    "C:\influx_root\connect_device_package\PamelaTestThing.private.key" ^
        --id basicPubSub ^
        --topic "sdk/test/python" ^
        --message "{\"mediaid\": \"site0.NO1.SIN-0.PV\", \"datetime\": \"2024-06-27T05:25:35.039364\", \"value\": [-0.5]}"

        #注意　windows OS、format of --message need to be escaped:
            "{\"msg\": \"hello\"}"

            ################################
    #Used CMD
        # ! be carefull iot core's policy (attached on cert), which may stop mqtt client pub data to iotcore
            Pub (works) // ec2
                mosquitto_pub -d ^
                --host "a2jg7heyk08f5y-ats.iot.ap-northeast-1.amazonaws.com" ^
                --cafile "C:\influx_root\connect_device_package\root-CA.crt" ^
                --cert   "C:\influx_root\connect_device_package\PamelaTestThing.cert.pem" ^
                --key    "C:\influx_root\connect_device_package\PamelaTestThing.private.key" ^
                --id basicPubSub ^
                --topic "TEST/site0/VAL/site0.NO1.SIN-0.PV" ^
                --message "{\"mediaid\": \"site0.NO1.SIN-0.PV\", \"datetime\": \"2024-06-28T08:10:35.039364\", \"value\": [-0.5]}"

            Sub (failed) // ec2
                mosquitto_sub -d ^
                --cafile "C:\influx_root\connect_device_package\root-CA.crt" ^
                --cert   "C:\influx_root\connect_device_package\PamelaTestThing.cert.pem" ^
                --key    "C:\influx_root\connect_device_package\PamelaTestThing.private.key" ^
                --host "a2jg7heyk08f5y-ats.iot.ap-northeast-1.amazonaws.com" ^
                --id basicPubSub ^
                --port 8883 ^
                --topic "TEST/+/VAL/+"
    #Result:data souce-> iotcore ->tele ->influx  //(works)
        details (showed by chart)ref: 
            https://app.diagrams.net/#G17Tbq4EFIotD6c3tw3F0iIm9SehlT8GaE#%7B%22pageId%22%3A%22Ht1M8jgEwFfnCIfOTk4-%22%7D


#iteration 2 ,start
    #status
        to be: iot core -> influx

    # Influx DB(EC2, connection info review ) from one notes 
        Influx 起動 
            解凍してexeを設置 
            C:\influx_root\influxdb 
            CMDからinluxを起動、 
            Bosewerから　UI確認 
            http://localhost:8086 

        Browerかsetup 
            Username: admin 
            Password: Hitz-2024 
            Organization Name: 
                Kanadevia 
            Initial Bucket Name: 
                KanaBucket 

        API coken: 
            P33deiwu-2jJ8nFoL2Wy4IoVDezo5nMdz1eLrW_iDBoKravYpqhhU2uKNLfn2Kvs_-p744sbfeYRCxuNuXT6cw== 

            LoadData -> API TokenからBucket限定した Custom Token を作成 (Generate a Custem API Tocken) 

            Desctiption:  
                KanaBucket Token 
            Buckets:  
                KanaBucket Read, Write 
            Telegrafs:  
                All Read, Write 
                Other Resources:  
                All Read, Write 
                Created API Token: 
            aproch
                node-> python 

                git python api=> まね //ここから

                cfn stack=> 作る
    # Lambda作成、いろいろ
        lambda name
            iotpf-dev-lambda-apne1-pplux-test01

        lambda role
            //permation boundaryあるから、Oから手動で作成
            name:
                iotpf-dev-role-lambda-iotcore_2_influxdb
            policy:
                cloudwatch
                AWSLambdaVPCAccessExecutionRole
                iot access

        Influx要python Libraryを取得し、Localでzipファイル作成、Lambda layerを作成
            #ref: influxdata/influxdb-client-python
                https://github.com/influxdata/influxdb-client-python?tab=readme-ov-file#getting-started
            #lib DL by cloud shell (failed)
                [cloudshell-user@ip-10-132-82-249 ~]$ python --version
                Python 3.9.16
                [cloudshell-user@ip-10-132-82-249 ~]$ python -m venv venv
                [cloudshell-user@ip-10-132-82-249 ~]$ chmod 764 ./venv/bin/activate
                [cloudshell-user@ip-10-132-82-249 ~]$ ls -l ./venv/bin/activate
                -rwxrw-r--. 1 cloudshell-user cloudshell-user 1901 Jun 28 06:51 ./venv/bin/activate
                [cloudshell-user@ip-10-132-82-249 ~]$  ./venv/bin/activate
            
            #lib DL by EC2 win os server (ok) ,pythonの仮想環境を使った
                C:\influx_root\data_simulator>.venv/Script/activate.bat
                    '.venv' is not recognized as an internal or external command,
                    operable program or batch file.

                C:\influx_root\data_simulator>.venv\Scripts\activate.bat

                (.venv) C:\influx_root\data_simulator>pip install 'influxdb-client[ciso]'
                    ERROR: Invalid requirement: "'influxdb-client[ciso]'"

                    [notice] A new release of pip is available: 24.0 -> 24.1.1
                    [notice] To update, run: python.exe -m pip install --upgrade pip

                (.venv) C:\influx_root\data_simulator>python.exe -m pip install --upgrade pip


                (.venv) C:\influx_root\data_simulator>pip install "influxdb-client[ciso]" -t .\aaa
                    Collecting influxdb-client[ciso]
                    Using cached influxdb_client-1.44.0-py3-none-any.whl.metadata (64 kB)
                    Collecting reactivex>=4.0.4 (from influxdb-client[ciso])
                    Using cached reactivex-4.0.4-py3-none-any.whl.metadata (5.5 kB)
                    Collecting certifi>=14.05.14 (from influxdb-client[ciso])


                (.venv) C:\influx_root\data_simulator>pip install influxdb-client[async] -t .\bbb
                    Collecting influxdb-client[async]
                    Using cached influxdb_client-1.44.0-py3-none-any.whl.metadata (64 kB)
                    Collecting reactivex>=4.0.4 (from influxdb-client[async])

        layer 作成
            ref: 初心者向け】AWS Lambda Layerの作成方法をわかりやすく解説【Python3.9】
                https://qiita.com/__DASHi__/items/268062f0dba0e93170f2
            name
                iotpf-dev-lambda-apne1-expo-layer-python-influxdb-client_ciso
                iotpf-dev-lambda-apne1-expo-layer-python-influxdb-client_async
        LambdaからLayer導入

    # iotcore & lambda 接続設定、Message routing (iot action rule!!!)
        ref : [AWS]Lambdaに送られるIot topicのpayloadにtopic名を含める方法
            https://qiita.com/to-fmak/items/e9e28bfd0750f71369a1
        name:
            iotpf_dev_iotrule_edge_device_pplus
        
        #iot core rule action, for letting Lambda get data with desire format 
            desire format
                {
                    'topic': 
                        'TEST/site0/VAL/site0.NO1.SIN-0.PV', 
                    'payload':
                    {'mediaid': 'site0.NO1.SIN-0.PV', 'datetime': '2024-06-28T08:10:35.039364', 'value': [-0.5]} 
                }

        #iot core rule setting
            iot console 遷移
                AWS IoT > Message routing > Rules
            samples
                # SELECT <Attribute> FROM <Topic Filter> WHERE <Condition>
                # SELECT * FROM 'TEST/+/VAL/+'
                # SELECT topic() as topic,* FROM 'TEST/+/VAL/+'
            nice version
                SELECT {'topic': topic(), 'payload': *} FROM 'TEST/+/VAL/+'

            output test from Lambda, OK:
                {
                    'topic': 
                        'TEST/site0/VAL/site0.NO1.SIN-0.PV', 
                    'payloads': 
                        {
                            'mediaid': 'site0.NO1.SIN-0.PV', 
                            'datetime': '2024-06-28T08:10:35.039364', 
                            'value': [-0.5]
                        }
                }

    # port opening setting
        #allow lambda to EC2
            setting sg for lambda, creat New sg
                name 
                    iotpf-dev-sg-apne1-gen-dev-lambda-test_put_data_to_influxdb-hosted-ec2
        #allow lambda to Windows
            open 8086 port for windows OS
                https://www.youtube.com/watch?v=hiJk_ZVG1m8&ab_channel=trendtech